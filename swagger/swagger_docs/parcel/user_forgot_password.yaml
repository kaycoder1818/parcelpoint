/user/forgot-password:
  post:
    summary: "Forgot Password - Generate Reset Code"
    description: "This endpoint allows a user to request a password reset by providing their userId and email. A reset code will be generated and sent to the user's email."
    tags: ["Users"]
    parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          properties:
            userId:
              type: "string"
              description: "The unique identifier of the user"
              example: "user123"
            email:
              type: "string"
              description: "The email address associated with the user"
              example: "user123@example.com"
          required:
            - userId
            - email
    responses:
      '200':
        description: "Reset code generated successfully and email sent"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                  example: "Reset code generated successfully"
                email:
                  type: "string"
                  example: "user123@example.com"
      '400':
        description: "Bad Request if required fields are missing or if email does not match the userId"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Missing required fields: userId or email"
      '404':
        description: "Not Found if the user is not found"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "User not found"
      '500':
        description: "Internal Server Error if there is an issue with the database or MySQL connection"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "MySQL database not responding, please check the database service"
