/profile:
  get:
    summary: "Get All Profiles"
    description: "Fetches all user profiles from the database. If no profiles are found, a message is returned indicating no profiles exist."
    tags: ["Profile"]
    responses:
      '200':
        description: "Successfully fetched profiles"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                profiles:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      id:
                        type: "integer"
                        description: "The unique identifier of the profile"
                        example: 1
                      userId:
                        type: "string"
                        description: "The unique identifier of the user"
                        example: "user123"
                      firstName:
                        type: "string"
                        description: "The first name of the user"
                        example: "John"
                      lastName:
                        type: "string"
                        description: "The last name of the user"
                        example: "Doe"
                      suffix:
                        type: "string"
                        description: "Optional suffix for the user's name (e.g., Jr, Sr)"
                        example: "Jr"
                      contactNumber:
                        type: "string"
                        description: "The contact number of the user"
                        example: "+1234567890"
                      email:
                        type: "string"
                        description: "The email address of the user"
                        example: "john.doe@example.com"
                      address:
                        type: "string"
                        description: "The address of the user"
                        example: "1234 Elm Street, Springfield"
                      birthday:
                        type: "string"
                        format: "date"
                        description: "The birthday of the user"
                        example: "1990-01-01"
                      photoURL:
                        type: "string"
                        description: "The URL to the user's profile photo"
                        example: "https://example.com/photo.jpg"
                      timestamp:
                        type: "string"
                        description: "The timestamp when the profile was created"
                        example: "2025-03-01T12:34:56Z"
      '404':
        description: "No profiles found"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                  example: "No profiles found"
      '500':
        description: "Internal Server Error if there is an issue with the database or MySQL connection"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "MySQL database not responding, please check the database service"
